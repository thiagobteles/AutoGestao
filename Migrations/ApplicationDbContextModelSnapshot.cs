// <auto-generated />
using System;
using AutoGestao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutoGestao.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoGestao.Entidades.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoVeiculo")
                        .HasColumnType("integer")
                        .HasColumnName("ano_veiculo");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(7838))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_avaliacao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<string>("PlacaVeiculo")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("placa_veiculo");

                    b.Property<int>("StatusAvaliacao")
                        .HasColumnType("integer")
                        .HasColumnName("status_avaliacao");

                    b.Property<decimal?>("ValorOferecido")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_oferecido");

                    b.Property<int?>("VeiculoMarcaId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_marca_id");

                    b.Property<int?>("VeiculoMarcaModeloId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_marca_modelo_id");

                    b.Property<int?>("VendedorResponsavelId")
                        .HasColumnType("integer")
                        .HasColumnName("vendedor_responsavel_id");

                    b.HasKey("Id")
                        .HasName("pk_avaliacoes");

                    b.HasIndex("ClienteId")
                        .HasDatabaseName("ix_avaliacoes_cliente_id");

                    b.HasIndex("DataAvaliacao");

                    b.HasIndex("StatusAvaliacao");

                    b.HasIndex("VeiculoMarcaId")
                        .HasDatabaseName("ix_avaliacoes_veiculo_marca_id");

                    b.HasIndex("VeiculoMarcaModeloId")
                        .HasDatabaseName("ix_avaliacoes_veiculo_marca_modelo_id");

                    b.HasIndex("VendedorResponsavelId")
                        .HasDatabaseName("ix_avaliacoes_vendedor_responsavel_id");

                    b.ToTable("avaliacoes");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cep");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cnpj");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(2291))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("endereco");

                    b.Property<int>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<string>("RG")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("rg");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.Property<int>("TipoCliente")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_cliente");

                    b.HasKey("Id")
                        .HasName("pk_clientes");

                    b.HasIndex("CNPJ")
                        .IsUnique()
                        .HasFilter("cnpj IS NOT NULL");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasFilter("cpf IS NOT NULL");

                    b.HasIndex("Email")
                        .HasDatabaseName("ix_cliente_email");

                    b.HasIndex("Nome")
                        .HasDatabaseName("ix_cliente_nome");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(9658))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataDespesa")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_despesa");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<int>("DespesaTipoId")
                        .HasColumnType("integer")
                        .HasColumnName("despesa_tipo_id");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("fornecedor_id");

                    b.Property<string>("NumeroNF")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("numero_nf");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_id");

                    b.HasKey("Id")
                        .HasName("pk_despesas");

                    b.HasIndex("DataDespesa");

                    b.HasIndex("DespesaTipoId")
                        .HasDatabaseName("ix_despesas_despesa_tipo_id");

                    b.HasIndex("FornecedorId")
                        .HasDatabaseName("ix_despesas_fornecedor_id");

                    b.HasIndex("Status");

                    b.HasIndex("VeiculoId")
                        .HasDatabaseName("ix_despesas_veiculo_id");

                    b.ToTable("despesas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.DespesaTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 549, DateTimeKind.Utc).AddTicks(272))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_despesa_tipos");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("despesa_tipos");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cep");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cnpj");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(3787))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<string>("RG")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("rg");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.Property<int>("TipoFornecedor")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_fornecedor");

                    b.HasKey("Id")
                        .HasName("pk_fornecedores");

                    b.HasIndex("CNPJ")
                        .IsUnique()
                        .HasFilter("cnpj IS NOT NULL");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasFilter("cpf IS NOT NULL");

                    b.HasIndex("Nome")
                        .HasDatabaseName("ix_fornecedor_nome");

                    b.ToTable("fornecedores");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Parcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(7370))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_pagamento");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_vencimento");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("integer")
                        .HasColumnName("numero_parcela");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("observacoes");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_pago");

                    b.Property<int>("VendaId")
                        .HasColumnType("integer")
                        .HasColumnName("venda_id");

                    b.HasKey("Id")
                        .HasName("pk_parcelas");

                    b.HasIndex("DataVencimento");

                    b.HasIndex("Status");

                    b.HasIndex("VendaId")
                        .HasDatabaseName("ix_parcelas_venda_id");

                    b.HasIndex("DataVencimento", "Status")
                        .HasDatabaseName("ix_parcela_vencimento_status");

                    b.ToTable("parcelas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 549, DateTimeKind.Utc).AddTicks(735))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_conclusao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_vencimento");

                    b.Property<string>("Descricao")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("descricao");

                    b.Property<int>("Prioridade")
                        .HasColumnType("integer")
                        .HasColumnName("prioridade");

                    b.Property<int?>("ResponsavelId")
                        .HasColumnType("integer")
                        .HasColumnName("responsavel_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("pk_tarefas");

                    b.HasIndex("DataVencimento");

                    b.HasIndex("ResponsavelId")
                        .HasDatabaseName("ix_tarefas_responsavel_id");

                    b.HasIndex("Status");

                    b.ToTable("tarefas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("integer")
                        .HasColumnName("ano_fabricacao");

                    b.Property<int>("AnoModelo")
                        .HasColumnType("integer")
                        .HasColumnName("ano_modelo");

                    b.Property<int>("Cambio")
                        .HasColumnType("integer")
                        .HasColumnName("cambio");

                    b.Property<string>("Chassi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("chassi");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("codigo");

                    b.Property<int>("Combustivel")
                        .HasColumnType("integer")
                        .HasColumnName("combustivel");

                    b.Property<DateTime?>("DataAlteracao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(5032))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_saida");

                    b.Property<int>("Especie")
                        .HasColumnType("integer")
                        .HasColumnName("especie");

                    b.Property<long>("KmSaida")
                        .HasColumnType("bigint")
                        .HasColumnName("km_saida");

                    b.Property<string>("Motorizacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("motorizacao");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<string>("Opcionais")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("opcionais");

                    b.Property<int>("PericiaCautelar")
                        .HasColumnType("integer")
                        .HasColumnName("pericia_cautelar");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("placa");

                    b.Property<int>("Portas")
                        .HasColumnType("integer")
                        .HasColumnName("portas");

                    b.Property<decimal?>("PrecoCompra")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_compra");

                    b.Property<decimal?>("PrecoVenda")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_venda");

                    b.Property<int?>("ProprietarioId")
                        .HasColumnType("integer")
                        .HasColumnName("proprietario_id");

                    b.Property<int?>("Quilometragem")
                        .HasColumnType("integer")
                        .HasColumnName("quilometragem");

                    b.Property<string>("Renavam")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("renavam");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao");

                    b.Property<int>("StatusVeiculo")
                        .HasColumnType("integer")
                        .HasColumnName("status_veiculo");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_veiculo");

                    b.Property<int?>("VeiculoCorId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_cor_id");

                    b.Property<int?>("VeiculoFilialId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_filial_id");

                    b.Property<int?>("VeiculoLocalizacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_localizacao_id");

                    b.Property<int?>("VeiculoMarcaId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_marca_id");

                    b.Property<int?>("VeiculoMarcaModeloId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_marca_modelo_id");

                    b.HasKey("Id")
                        .HasName("pk_veiculos");

                    b.HasIndex("Chassi")
                        .IsUnique()
                        .HasFilter("chassi IS NOT NULL");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("ProprietarioId")
                        .HasDatabaseName("ix_veiculos_proprietario_id");

                    b.HasIndex("Renavam")
                        .IsUnique()
                        .HasFilter("renavam IS NOT NULL");

                    b.HasIndex("Situacao");

                    b.HasIndex("StatusVeiculo");

                    b.HasIndex("VeiculoCorId")
                        .HasDatabaseName("ix_veiculos_veiculo_cor_id");

                    b.HasIndex("VeiculoFilialId")
                        .HasDatabaseName("ix_veiculos_veiculo_filial_id");

                    b.HasIndex("VeiculoLocalizacaoId")
                        .HasDatabaseName("ix_veiculos_veiculo_localizacao_id");

                    b.HasIndex("VeiculoMarcaId")
                        .HasDatabaseName("ix_veiculos_veiculo_marca_id");

                    b.HasIndex("VeiculoMarcaModeloId")
                        .HasDatabaseName("ix_veiculos_veiculo_marca_modelo_id");

                    b.HasIndex("Situacao", "VeiculoMarcaId")
                        .HasDatabaseName("ix_veiculo_situacao_marca");

                    b.ToTable("veiculos");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoCor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_cores");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("veiculo_cores");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("caminho_arquivo");

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(6499))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_upload");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome_arquivo");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("observacoes");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_documento");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_id");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_documentos");

                    b.HasIndex("VeiculoId")
                        .HasDatabaseName("ix_veiculo_documentos_veiculo_id");

                    b.ToTable("veiculo_documentos");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoFilial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_filiais");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("veiculo_filiais");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("caminho_arquivo");

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(6130))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_upload");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("descricao");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome_arquivo");

                    b.Property<bool>("Principal")
                        .HasColumnType("boolean")
                        .HasColumnName("principal");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_id");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_fotos");

                    b.HasIndex("VeiculoId")
                        .HasDatabaseName("ix_veiculo_fotos_veiculo_id");

                    b.ToTable("veiculo_fotos");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoLocalizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_localizacoes");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("veiculo_localizacoes");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_marcas");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("veiculo_marcas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarcaModelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<int?>("VeiculoMarcaId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_marca_id");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_marca_modelos");

                    b.HasIndex("VeiculoMarcaId")
                        .HasDatabaseName("ix_veiculo_marca_modelos_veiculo_marca_id");

                    b.ToTable("veiculo_marca_modelos");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(6910))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_venda");

                    b.Property<int?>("FormaPagamento")
                        .HasColumnType("integer")
                        .HasColumnName("forma_pagamento");

                    b.Property<int?>("NumeroParcelas")
                        .HasColumnType("integer")
                        .HasColumnName("numero_parcelas");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal?>("ValorEntrada")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_entrada");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_venda");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer")
                        .HasColumnName("veiculo_id");

                    b.Property<int>("VendedorId")
                        .HasColumnType("integer")
                        .HasColumnName("vendedor_id");

                    b.HasKey("Id")
                        .HasName("pk_vendas");

                    b.HasIndex("ClienteId")
                        .HasDatabaseName("ix_vendas_cliente_id");

                    b.HasIndex("DataVenda");

                    b.HasIndex("Status");

                    b.HasIndex("VeiculoId")
                        .HasDatabaseName("ix_vendas_veiculo_id");

                    b.HasIndex("VendedorId")
                        .HasDatabaseName("ix_vendas_vendedor_id");

                    b.HasIndex("DataVenda", "Status")
                        .HasDatabaseName("ix_venda_data_status");

                    b.ToTable("vendas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<DateTime>("DataAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2025, 9, 18, 4, 12, 21, 548, DateTimeKind.Utc).AddTicks(2951))
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<decimal?>("Meta")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("meta");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("PercentualComissao")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("percentual_comissao");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id")
                        .HasName("pk_vendedores");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Nome")
                        .HasDatabaseName("ix_vendedor_nome");

                    b.ToTable("vendedores");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Avaliacao", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Cliente", "Cliente")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_avaliacoes_clientes_cliente_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarca", "VeiculoMarca")
                        .WithMany()
                        .HasForeignKey("VeiculoMarcaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_avaliacoes_veiculo_marcas_veiculo_marca_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarcaModelo", "VeiculoMarcaModelo")
                        .WithMany()
                        .HasForeignKey("VeiculoMarcaModeloId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_avaliacoes_veiculo_marca_modelos_veiculo_marca_modelo_id");

                    b.HasOne("AutoGestao.Entidades.Vendedor", "VendedorResponsavel")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("VendedorResponsavelId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_avaliacoes_vendedores_vendedor_responsavel_id");

                    b.Navigation("Cliente");

                    b.Navigation("VeiculoMarca");

                    b.Navigation("VeiculoMarcaModelo");

                    b.Navigation("VendedorResponsavel");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Despesa", b =>
                {
                    b.HasOne("AutoGestao.Entidades.DespesaTipo", "DespesaTipo")
                        .WithMany()
                        .HasForeignKey("DespesaTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_despesas_despesa_tipos_despesa_tipo_id");

                    b.HasOne("AutoGestao.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_despesas_fornecedores_fornecedor_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany("Despesas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_despesas_veiculos_veiculo_id");

                    b.Navigation("DespesaTipo");

                    b.Navigation("Fornecedor");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Parcela", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Venda", "Venda")
                        .WithMany("Parcelas")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_parcelas_vendas_venda_id");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Tarefa", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Vendedor", "Responsavel")
                        .WithMany("Tarefas")
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_tarefas_vendedores_responsavel_id");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.Veiculo", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Cliente", "Proprietario")
                        .WithMany("Veiculos")
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_veiculos_clientes_proprietario_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoCor", "Cor")
                        .WithMany()
                        .HasForeignKey("VeiculoCorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_veiculos_veiculo_cores_veiculo_cor_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoFilial", "Filial")
                        .WithMany()
                        .HasForeignKey("VeiculoFilialId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_veiculos_veiculo_filiais_veiculo_filial_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoLocalizacao", "Localizacao")
                        .WithMany()
                        .HasForeignKey("VeiculoLocalizacaoId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_veiculos_veiculo_localizacoes_veiculo_localizacao_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarca", "Marca")
                        .WithMany()
                        .HasForeignKey("VeiculoMarcaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_veiculos_veiculo_marcas_veiculo_marca_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarcaModelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("VeiculoMarcaModeloId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_veiculos_veiculo_marca_modelos_veiculo_marca_modelo_id");

                    b.Navigation("Cor");

                    b.Navigation("Filial");

                    b.Navigation("Localizacao");

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoDocumento", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany("Documentos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_veiculo_documentos_veiculos_veiculo_id");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoFoto", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany("Fotos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_veiculo_fotos_veiculos_veiculo_id");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarcaModelo", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarca", "Marca")
                        .WithMany()
                        .HasForeignKey("VeiculoMarcaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_veiculo_marca_modelos_veiculo_marcas_veiculo_marca_id");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Venda", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vendas_clientes_cliente_id");

                    b.HasOne("AutoGestao.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany("Vendas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vendas_veiculos_veiculo_id");

                    b.HasOne("AutoGestao.Entidades.Vendedor", "Vendedor")
                        .WithMany("Vendas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vendas_vendedores_vendedor_id");

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Cliente", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Veiculos");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.Veiculo", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("Documentos");

                    b.Navigation("Fotos");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Venda", b =>
                {
                    b.Navigation("Parcelas");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Vendedor", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Tarefas");

                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
