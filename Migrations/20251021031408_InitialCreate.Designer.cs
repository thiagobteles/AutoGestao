// <auto-generated />
using System;
using AutoGestao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutoGestao.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251021031408_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoGestao.Entidades.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("CamposAlterados")
                        .HasColumnType("text")
                        .HasColumnName("campos_alterados");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_hora");

                    b.Property<long?>("DuracaoMs")
                        .HasColumnType("bigint")
                        .HasColumnName("duracao_ms");

                    b.Property<string>("EntidadeDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("entidade_display_name");

                    b.Property<string>("EntidadeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("entidade_id");

                    b.Property<string>("EntidadeNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("entidade_nome");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<string>("IpCliente")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("ip_cliente");

                    b.Property<string>("MensagemErro")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("mensagem_erro");

                    b.Property<string>("MetodoHttp")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("metodo_http");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("boolean")
                        .HasColumnName("sucesso");

                    b.Property<string>("TabelaNome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tabela_nome");

                    b.Property<int>("TipoOperacao")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_operacao");

                    b.Property<string>("UrlRequisicao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("url_requisicao");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("user_agent");

                    b.Property<string>("UsuarioEmail")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("usuario_email");

                    b.Property<long?>("UsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("usuario_id");

                    b.Property<string>("UsuarioNome")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("usuario_nome");

                    b.Property<string>("ValoresAntigos")
                        .HasColumnType("text")
                        .HasColumnName("valores_antigos");

                    b.Property<string>("ValoresNovos")
                        .HasColumnType("text")
                        .HasColumnName("valores_novos");

                    b.HasKey("Id")
                        .HasName("pk_audit_logs");

                    b.HasIndex("DataHora");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("EntidadeNome", "EntidadeId");

                    b.ToTable("audit_logs", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cep");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("complemento");

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("DocumentoRG")
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)")
                        .HasColumnName("documento_rg");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Endereco")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("endereco");

                    b.Property<int>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<string>("FotoCliente")
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)")
                        .HasColumnName("foto_cliente");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<string>("Rg")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("rg");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_pessoa");

                    b.HasKey("Id")
                        .HasName("pk_clientes");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasFilter("cnpj IS NOT NULL");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("cpf IS NOT NULL");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Nome")
                        .HasDatabaseName("ix_cliente_nome");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cep");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("complemento");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Endereco")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("endereco");

                    b.Property<int>("Estado")
                        .HasColumnType("integer")
                        .HasColumnName("estado");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("razao_social");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id")
                        .HasName("pk_empresas");

                    b.HasIndex("EmpresaId");

                    b.ToTable("empresas", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Lead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<string>("Contexto")
                        .HasMaxLength(-1)
                        .HasColumnType("text")
                        .HasColumnName("contexto");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<int>("TipoRetornoContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("tipo_retorno_contato");

                    b.HasKey("Id")
                        .HasName("pk_leads");

                    b.HasIndex("EmpresaId");

                    b.ToTable("leads", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Relatorio.ReportTemplateEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricao");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<bool>("IsPadrao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_padrao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("TemplateJson")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("template_json");

                    b.Property<string>("TipoEntidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tipo_entidade");

                    b.HasKey("Id")
                        .HasName("pk_report_templates");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoEntidade");

                    b.HasIndex("TipoEntidade", "IsPadrao");

                    b.ToTable("report_templates", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("ConfirmarSenha")
                        .HasColumnType("text")
                        .HasColumnName("confirmar_senha");

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("nome");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<int>("Perfil")
                        .HasColumnType("integer")
                        .HasColumnName("perfil");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha_hash");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("ultimo_login");

                    b.HasKey("Id")
                        .HasName("pk_usuarios");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.Veiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("integer")
                        .HasColumnName("ano_fabricacao");

                    b.Property<int>("AnoModelo")
                        .HasColumnType("integer")
                        .HasColumnName("ano_modelo");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<int>("Cambio")
                        .HasColumnType("integer")
                        .HasColumnName("cambio");

                    b.Property<int?>("CapacidadePortaMalas")
                        .HasColumnType("integer")
                        .HasColumnName("capacidade_porta_malas");

                    b.Property<string>("Chassi")
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)")
                        .HasColumnName("chassi");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("codigo");

                    b.Property<int>("Combustivel")
                        .HasColumnType("integer")
                        .HasColumnName("combustivel");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_entrada");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_saida");

                    b.Property<int>("Especie")
                        .HasColumnType("integer")
                        .HasColumnName("especie");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("id_cliente");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<long?>("IdVeiculoCor")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo_cor");

                    b.Property<long?>("IdVeiculoFilial")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo_filial");

                    b.Property<long?>("IdVeiculoLocalizacao")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo_localizacao");

                    b.Property<long>("IdVeiculoMarca")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo_marca");

                    b.Property<long>("IdVeiculoMarcaModelo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo_marca_modelo");

                    b.Property<decimal?>("KmEntrada")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("km_entrada");

                    b.Property<decimal?>("KmSaida")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("km_saida");

                    b.Property<string>("Motorizacao")
                        .HasColumnType("text")
                        .HasColumnName("motorizacao");

                    b.Property<int>("NumeroPortas")
                        .HasColumnType("integer")
                        .HasColumnName("numero_portas");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("observacoes");

                    b.Property<string>("Opcionais")
                        .HasColumnType("text")
                        .HasColumnName("opcionais");

                    b.Property<int>("OrigemVeiculo")
                        .HasColumnType("integer")
                        .HasColumnName("origem_veiculo");

                    b.Property<int>("PericiaCautelar")
                        .HasColumnType("integer")
                        .HasColumnName("pericia_cautelar");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("placa");

                    b.Property<decimal?>("PrecoCompra")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_compra");

                    b.Property<decimal?>("PrecoVenda")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_venda");

                    b.Property<string>("Renavam")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("renavam");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("situacao");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_veiculo");

                    b.HasKey("Id")
                        .HasName("pk_veiculos");

                    b.HasIndex("Chassi")
                        .IsUnique()
                        .HasFilter("chassi IS NOT NULL");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdVeiculoCor");

                    b.HasIndex("IdVeiculoFilial");

                    b.HasIndex("IdVeiculoLocalizacao");

                    b.HasIndex("IdVeiculoMarca");

                    b.HasIndex("IdVeiculoMarcaModelo");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("Renavam")
                        .IsUnique()
                        .HasFilter("renavam IS NOT NULL");

                    b.ToTable("veiculos", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoCor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("descricao");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_cores");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("veiculo_cores", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoDocumento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_upload");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("documento");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<long>("IdVeiculo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("observacoes");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_documento");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_documentos");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdVeiculo");

                    b.ToTable("veiculo_documentos", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoFilial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_filiais");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("veiculo_filiais", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoFoto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("caminho_arquivo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_upload");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("descricao");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)")
                        .HasColumnName("foto");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<long>("IdVeiculo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome_arquivo");

                    b.Property<bool>("Principal")
                        .HasColumnType("boolean")
                        .HasColumnName("principal");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_fotos");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdVeiculo");

                    b.ToTable("veiculo_fotos", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoLocalizacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_localizacoes");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("veiculo_localizacoes", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<long?>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_marcas");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("veiculo_marcas", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarcaModelo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AlteradoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("alterado_por_usuario_id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<long?>("CriadoPorUsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("criado_por_usuario_id");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<long>("IdEmpresa")
                        .HasColumnType("bigint")
                        .HasColumnName("id_empresa");

                    b.Property<long?>("IdVeiculoMarca")
                        .HasColumnType("bigint")
                        .HasColumnName("id_veiculo_marca");

                    b.Property<long?>("VeiculoMarcaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("pk_veiculo_marca_modelos");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdVeiculoMarca");

                    b.HasIndex("VeiculoMarcaId");

                    b.ToTable("veiculo_marca_modelos", (string)null);
                });

            modelBuilder.Entity("AutoGestao.Entidades.AuditLog", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("AutoGestao.Entidades.Usuario", "Usuario")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Cliente", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Empresa", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Lead", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Relatorio.ReportTemplateEntity", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Usuario", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.Veiculo", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Cliente", "Cliente")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoCor", "VeiculoCor")
                        .WithMany()
                        .HasForeignKey("IdVeiculoCor")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoFilial", "VeiculoFilial")
                        .WithMany()
                        .HasForeignKey("IdVeiculoFilial")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoLocalizacao", "VeiculoLocalizacao")
                        .WithMany()
                        .HasForeignKey("IdVeiculoLocalizacao")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarca", "VeiculoMarca")
                        .WithMany()
                        .HasForeignKey("IdVeiculoMarca")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarcaModelo", "VeiculoMarcaModelo")
                        .WithMany()
                        .HasForeignKey("IdVeiculoMarcaModelo")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("VeiculoCor");

                    b.Navigation("VeiculoFilial");

                    b.Navigation("VeiculoLocalizacao");

                    b.Navigation("VeiculoMarca");

                    b.Navigation("VeiculoMarcaModelo");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoCor", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoDocumento", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("AutoGestao.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany("Documentos")
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoFilial", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoFoto", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("AutoGestao.Entidades.Veiculos.Veiculo", "Veiculo")
                        .WithMany("Fotos")
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoLocalizacao", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarca", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarcaModelo", b =>
                {
                    b.HasOne("AutoGestao.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarca", "VeiculoMarca")
                        .WithMany()
                        .HasForeignKey("IdVeiculoMarca")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AutoGestao.Entidades.Veiculos.VeiculoMarca", null)
                        .WithMany("Modelos")
                        .HasForeignKey("VeiculoMarcaId");

                    b.Navigation("Empresa");

                    b.Navigation("VeiculoMarca");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Cliente", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Usuario", b =>
                {
                    b.Navigation("AuditLogs");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.Veiculo", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("AutoGestao.Entidades.Veiculos.VeiculoMarca", b =>
                {
                    b.Navigation("Modelos");
                });
#pragma warning restore 612, 618
        }
    }
}
