@using AutoGestao.Enumerador.Veiculo
@using AutoGestao.Models
@model VeiculosIndexViewModel
@{
    ViewData["Title"] = "VeÃ­culos";
}

<div class="dashboard-container fade-in">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title">
                <i class="fas fa-car"></i>
                VeÃ­culos
            </h1>
        </div>
        <div class="d-flex gap-3">
            <button class="btn-modern btn-outline-modern" onclick="exportarExcel()">
                <i class="fas fa-file-excel"></i>
                Exportar
            </button>
            <a asp-action="Create" class="btn-modern btn-primary-modern">
                <i class="fas fa-plus"></i>
                Novo VeÃ­culo
            </a>
        </div>
    </div>

    <!-- Filtros -->
    <div class="card-modern mb-4">
        <div class="card-header-modern">
            <i class="fas fa-filter"></i>
            Filtros de Busca
        </div>
        <div class="card-body-modern">
            <form id="filtrosForm">
                <div class="grid-2 mb-3">
                    <div class="form-group-modern">
                        <label class="form-label-modern">Buscar</label>
                        <input type="text" name="search" id="searchInput" class="form-control-modern"
                               placeholder="Marca, modelo, placa, cÃ³digo..."
                               value="@Model.Search" />
                    </div>
                    <div class="form-group-modern">
                        <label class="form-label-modern">SituaÃ§Ã£o</label>
                        <select name="situacao" id="filterSituacao" class="form-select-modern">
                            <option value="">Todas</option>
                            <option value="1" selected="@(Model.Situacao == EnumSituacaoVeiculo.Estoque)">ðŸ“¦ Estoque</option>
                            <option value="2" selected="@(Model.Situacao == EnumSituacaoVeiculo.Vendido)">âœ… Vendido</option>
                            <option value="3" selected="@(Model.Situacao == EnumSituacaoVeiculo.Reservado)">ðŸ”’ Reservado</option>
                            <option value="4" selected="@(Model.Situacao == EnumSituacaoVeiculo.Manutencao)">ðŸ”§ ManutenÃ§Ã£o</option>
                        </select>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Controles da Grid -->
    <div class="card-modern">
        <div class="card-header-modern">
            <div class="d-flex justify-content-between align-items-center w-100">
                <div class="d-flex align-items-center">
                    <i class="fas fa-list me-2"></i>
                    <span>Lista de VeÃ­culos</span>
                </div>

                <!-- InformaÃ§Ãµes e controles em linha Ãºnica -->
                <div class="d-flex align-items-center gap-3">
                    <!-- Badge com total -->
                    <span class="badge bg-primary">@Model.TotalRecords veÃ­culos</span>

                    <!-- InformaÃ§Ãµes de registros -->
                    <span class="text-muted fs-sm">
                        Mostrando @Model.StartRecord-@Model.EndRecord de @Model.TotalRecords registros
                    </span>

                    <!-- Seletor de quantidade por pÃ¡gina -->
                    <div class="d-flex align-items-center gap-2">
                        <span class="text-muted fs-sm">Exibir:</span>
                        <select id="pageSizeSelector" class="form-select form-select-sm" style="width: 80px;">
                            @foreach (var size in Model.PageSizeOptions)
                            {
                                <option value="@size" selected="@(Model.PageSize == size)">
                                    @Model.GetPageSizeText(size)
                                </option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>

        <!-- Container da Grid com Loading -->
        <div class="card-body-modern p-0 position-relative">
            <div id="loadingOverlay" class="position-absolute w-100 h-100 d-none"
                 style="background: rgba(255,255,255,0.8); z-index: 10;">
                <div class="d-flex justify-content-center align-items-center h-100">
                    <div class="loading-spinner me-2"></div>
                    Carregando...
                </div>
            </div>

            <div id="gridContainer">
                @await Html.PartialAsync("_VeiculosGrid", Model)
            </div>
        </div>

        <!-- PaginaÃ§Ã£o -->
        @if (Model.TotalPages > 1 && Model.PageSize != -1)
        {
            <div class="card-footer bg-light">
                <nav aria-label="NavegaÃ§Ã£o de pÃ¡ginas">
                    <ul class="pagination justify-content-center mb-0">
                        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                            <button class="page-link" onclick="changePage(1)" disabled="@(!Model.HasPreviousPage)">
                                <i class="fas fa-angle-double-left"></i>
                            </button>
                        </li>
                        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                            <button class="page-link" onclick="changePage(@(Model.CurrentPage - 1))" disabled="@(!Model.HasPreviousPage)">
                                <i class="fas fa-angle-left"></i>
                            </button>
                        </li>

                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <button class="page-link" onclick="changePage(@i)">@i</button>
                            </li>
                        }

                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <button class="page-link" onclick="changePage(@(Model.CurrentPage + 1))" disabled="@(!Model.HasNextPage)">
                                <i class="fas fa-angle-right"></i>
                            </button>
                        </li>
                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <button class="page-link" onclick="changePage(@Model.TotalPages)" disabled="@(!Model.HasNextPage)">
                                <i class="fas fa-angle-double-right"></i>
                            </button>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Script serÃ¡ carregado automaticamente pelo grid-system.js
        console.log('ðŸ“‹ PÃ¡gina de VeÃ­culos carregada com Grid System v2.0');
    </script>
}