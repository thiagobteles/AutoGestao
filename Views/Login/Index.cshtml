@using AutoGestao.Data
@model AutoGestao.Models.Auth.LoginRequest
@{
    Layout = null;
    ViewData["Title"] = "Login - " + Globais.NomeApresentacao;
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .login-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            padding: 3rem;
            max-width: 450px;
            width: 100%;
        }

        .login-header {
            text-align: center;
            margin-bottom: 2rem;
        }

            .login-header h1 {
                color: #333;
                font-weight: 700;
                margin-bottom: 0.5rem;
            }

            .login-header p {
                color: #666;
                margin-bottom: 0;
            }

        .form-floating {
            margin-bottom: 1rem;
        }

            .form-floating input {
                border: 2px solid #e9ecef;
                border-radius: 12px;
                padding: 1rem 0.75rem;
                transition: all 0.3s ease;
            }

                .form-floating input:focus {
                    border-color: #667eea;
                    box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
                }

            .form-floating label {
                color: #666;
            }

        .btn-login {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 12px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
            width: 100%;
        }

            .btn-login:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
            }

        .form-check-input:checked {
            background-color: #667eea;
            border-color: #667eea;
        }

        .alert {
            border-radius: 12px;
            border: none;
        }

        .loading {
            display: none;
        }

            .loading.show {
                display: inline-block;
            }

        @@media (max-width: 576px) {
            .login-container
            {
                margin: 1rem;
                padding: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-5 col-md-7 col-sm-9">
                <div class="login-container">
                    <div class="login-header">
                        @if (Globais.EhAutoGestao)
                        {
                            <i class="fas fa-car fa-3x text-primary mb-3"></i>
                            <h1>AutoGestão</h1>
                            
                        }else
                        {
                            <i class="fas fa-graduation-cap fa-3x text-primary mb-3"></i>
                            <h1>Instituto Fazendo a Diferença</h1>
                        }
                        
                        <p>Faça login para acessar o sistema</p>
                    </div>

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <div>@error.ErrorMessage</div>
                            }
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @TempData["ErrorMessage"]
                        </div>
                    }

                    @if (TempData["InfoMessage"] != null)
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            @TempData["InfoMessage"]
                        </div>
                    }

                    <form asp-action="Index" method="post" id="loginForm">
                        @Html.AntiForgeryToken()

                        <div class="form-floating">
                            <input asp-for="Email" class="form-control" type="email" placeholder="seu@email.com" required>
                            <label asp-for="Email"><i class="fas fa-envelope me-2"></i>Email</label>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-floating">
                            <input asp-for="Senha" class="form-control" type="password" placeholder="Senha" required>
                            <label asp-for="Senha"><i class="fas fa-lock me-2"></i>Senha</label>
                            <span asp-validation-for="Senha" class="text-danger"></span>
                        </div>

                        <div class="form-check mb-3">
                            <input asp-for="LembrarMe" class="form-check-input" type="checkbox">
                            <label asp-for="LembrarMe" class="form-check-label">
                                Lembrar-me
                            </label>
                        </div>

                        <button type="submit" class="btn btn-primary btn-login">
                            <span class="loading spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                            <i class="fas fa-sign-in-alt me-2"></i>
                            Entrar
                        </button>
                    </form>

                    <div class="text-center mt-4">
                        <small class="text-muted">
                            <i class="fas fa-shield-alt me-1"></i>
                            Sistema protegido por autenticação JWT
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('loginForm').addEventListener('submit', function() {
            const button = this.querySelector('button[type="submit"]');
            const loading = button.querySelector('.loading');
            const icon = button.querySelector('.fas');

            loading.classList.add('show');
            icon.style.display = 'none';
            button.disabled = true;
        });

        // Auto-focus no primeiro campo
        document.querySelector('input[type="email"]').focus();
    </script>
</body>
</html>

<!-- Arquivo: Views/Shared/_LoginPartial.cshtml -->
@if (User.Identity?.IsAuthenticated == true)
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-user me-1"></i>
            @User.Identity.Name
        </a>
        <ul class="dropdown-menu">
            <li><h6 class="dropdown-header">@User.FindFirst("Perfil")?.Value</h6></li>
            <li><hr class="dropdown-divider"></li>
            @if (User.IsInRole("Admin"))
            {
                <li><a class="dropdown-item" asp-controller="Usuario" asp-action="Index"><i class="fas fa-users me-2"></i>Gerenciar Usuários</a></li>
                <li><hr class="dropdown-divider"></li>
            }
            <li><a class="dropdown-item" href="#" onclick="alterarSenha()"><i class="fas fa-key me-2"></i>Alterar Senha</a></li>
            <li><hr class="dropdown-divider"></li>
            <li>
                <form asp-controller="Login" asp-action="Logout" method="post" class="d-inline">
                    <button type="submit" class="dropdown-item text-danger">
                        <i class="fas fa-sign-out-alt me-2"></i>Sair
                    </button>
                </form>
            </li>
        </ul>
    </li>
}

<!-- Modal para alterar senha -->
<div class="modal fade" id="modalAlterarSenha" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-key me-2"></i>Alterar Senha</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="formAlterarSenha">
                    <div class="mb-3">
                        <label class="form-label">Senha Atual</label>
                        <input type="password" id="senhaAtual" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Nova Senha</label>
                        <input type="password" id="novaSenha" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirmar Nova Senha</label>
                        <input type="password" id="confirmarSenha" class="form-control" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="salvarNovaSenha()">Alterar Senha</button>
            </div>
        </div>
    </div>
</div>

<script>
    function alterarSenha() {
        new bootstrap.Modal(document.getElementById('modalAlterarSenha')).show();
    }

    function salvarNovaSenha() {
        const senhaAtual = document.getElementById('senhaAtual').value;
        const novaSenha = document.getElementById('novaSenha').value;
        const confirmarSenha = document.getElementById('confirmarSenha').value;

        if (novaSenha !== confirmarSenha) {
            alert('As senhas não conferem!');
            return;
        }

        // Implementar chamada AJAX para alterar senha
        fetch('/Usuario/AlterarSenha', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                id: @(User.FindFirst("NameIdentifier")?.Value ?? "0"),
                senhaAtual: senhaAtual,
                novaSenha: novaSenha,
                confirmarSenha: confirmarSenha
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.sucesso) {
                bootstrap.Modal.getInstance(document.getElementById('modalAlterarSenha')).hide();
                alert('Senha alterada com sucesso!');
                document.getElementById('formAlterarSenha').reset();
            } else {
                alert(data.mensagem);
            }
        })
        .catch(error => {
            alert('Erro ao alterar senha');
        });
    }
</script>