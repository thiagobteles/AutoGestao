@model StandardFormViewModel
@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header do Formulário -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <h2 class="mb-1">
                        <i class="@Model.Icon me-2"></i>@Model.Title
                    </h2>
                    @if (!string.IsNullOrEmpty(Model.Subtitle))
                    {
                        <p class="text-muted mb-0">@Model.Subtitle</p>
                    }
                </div>
                
                <a href="@Url.Action(Model.BackAction)" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i>@Model.BackText
                </a>
            </div>

            <!-- Formulário Automático -->
            <form id="autoForm" method="post" enctype="multipart/form-data" 
                  data-ajax="@(Model.EnableAjaxSubmit ? "true" : "false")">
                @Html.AntiForgeryToken()
                
                <!-- Campo Id se for edição -->
                @if (Model.IsEditMode && Model.Model != null)
                {
                    var idProperty = Model.Model.GetType().GetProperty("Id");
                    var idValue = idProperty?.GetValue(Model.Model);
                    <input type="hidden" name="Id" value="@idValue" />
                }

                @if (Model.Sections.Any())
                {
                    @foreach (var sectionItem in Model.Sections.OrderBy(s => s.GridColumns))
                    {
                        <div class="card mb-3">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <i class="@sectionItem.Icon me-2"></i>@sectionItem.Name
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    @foreach (var field in sectionItem.Fields.OrderBy(f => f.Order))
                                    {
                                        var colClass = $"col-md-{12 / Math.Max(1, sectionItem.GridColumns)}";
                                        
                                        <div class="@colClass mb-3">
                                            <label class="form-label">
                                                @field.DisplayName
                                                @if (field.Required)
                                                {
                                                    <span class="text-danger">*</span>
                                                }
                                            </label>
                                            
                                            @switch (field.Type)
                                            {
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Text:
                                                    <div class="input-group">
                                                        @if (!string.IsNullOrEmpty(field.Icon))
                                                        {
                                                            <span class="input-group-text">
                                                                <i class="@field.Icon"></i>
                                                            </span>
                                                        }
                                                        <input type="text" class="form-control @field.CssClass" 
                                                               name="@field.PropertyName" 
                                                               value="@field.Value" 
                                                               placeholder="@field.Placeholder"
                                                               @(field.Required ? "required" : "")
                                                               @(field.ReadOnly ? "readonly" : "") />
                                                    </div>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.TextArea:
                                                    <textarea class="form-control @field.CssClass" 
                                                              name="@field.PropertyName" 
                                                              placeholder="@field.Placeholder"
                                                              rows="3"
                                                              @(field.Required ? "required" : "")
                                                              @(field.ReadOnly ? "readonly" : "")>@field.Value</textarea>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Number:
                                                    <div class="input-group">
                                                        @if (!string.IsNullOrEmpty(field.Icon))
                                                        {
                                                            <span class="input-group-text">
                                                                <i class="@field.Icon"></i>
                                                            </span>
                                                        }
                                                        <input type="number" class="form-control @field.CssClass" 
                                                               name="@field.PropertyName" 
                                                               value="@field.Value" 
                                                               placeholder="@field.Placeholder"
                                                               @(field.Required ? "required" : "")
                                                               @(field.ReadOnly ? "readonly" : "") />
                                                    </div>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Date:
                                                    <div class="input-group">
                                                        <span class="input-group-text">
                                                            <i class="fas fa-calendar"></i>
                                                        </span>
                                                        <input type="date" class="form-control @field.CssClass" 
                                                               name="@field.PropertyName" 
                                                               value="@field.Value"
                                                               @(field.Required ? "required" : "")
                                                               @(field.ReadOnly ? "readonly" : "") />
                                                    </div>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Select:
                                                    <select class="form-select @field.CssClass" 
                                                            name="@field.PropertyName"
                                                            @(field.Required ? "required" : "")
                                                            @(field.ReadOnly ? "disabled" : "")>
                                                        @if (!field.Required)
                                                        {
                                                            <option value="">Selecione...</option>
                                                        }
                                                        @foreach (var option in field.Options)
                                                        {
                                                            <option value="@option.Value" 
                                                                    selected="@(option.Value == field.Value)">
                                                                @option.Text
                                                            </option>
                                                        }
                                                    </select>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Checkbox:
                                                    <div class="form-check">
                                                        <input type="checkbox" class="form-check-input @field.CssClass" 
                                                               name="@field.PropertyName" 
                                                               value="true"
                                                               checked="@(field.Value == "true" || field.Value == "True")"
                                                               @(field.ReadOnly ? "disabled" : "") />
                                                        <label class="form-check-label">
                                                            @field.DisplayName
                                                        </label>
                                                        <input type="hidden" name="@field.PropertyName" value="false" />
                                                    </div>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Email:
                                                    <div class="input-group">
                                                        <span class="input-group-text">
                                                            <i class="fas fa-envelope"></i>
                                                        </span>
                                                        <input type="email" class="form-control @field.CssClass" 
                                                               name="@field.PropertyName" 
                                                               value="@field.Value" 
                                                               placeholder="@field.Placeholder"
                                                               @(field.Required ? "required" : "")
                                                               @(field.ReadOnly ? "readonly" : "") />
                                                    </div>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.File:
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Image:
                                                    <div class="file-upload-container">
                                                        @if (!string.IsNullOrEmpty(field.FileUrl))
                                                        {
                                                            <div class="current-file mb-2">
                                                                <a href="@field.FileUrl" target="_blank" class="btn btn-sm btn-outline-info">
                                                                    <i class="fas fa-download me-1"></i>@field.FileName
                                                                </a>
                                                                <button type="button" class="btn btn-sm btn-outline-danger ms-1" 
                                                                        onclick="removeFile('@field.PropertyName')">
                                                                    <i class="fas fa-trash"></i>
                                                                </button>
                                                            </div>
                                                        }
                                                        <input type="file" class="form-control @field.CssClass" 
                                                               name="@field.PropertyName" 
                                                               accept="@(field.Type == AutoGestao.Enumerador.Gerais.EnumFieldType.Image ? "image/*" : "*")"
                                                               @(field.ReadOnly ? "disabled" : "") />
                                                        <input type="hidden" name="@field.PropertyName" value="@field.FilePath" />
                                                    </div>
                                                    break;
                                                    
                                                case AutoGestao.Enumerador.Gerais.EnumFieldType.Reference:
                                                    <select class="form-select @field.CssClass reference-select" 
                                                            name="@field.PropertyName"
                                                            data-reference-type="@field.Reference?.Name"
                                                            data-search-url="@field.ReferenceConfig?.SearchUrl"
                                                            @(field.Required ? "required" : "")
                                                            @(field.ReadOnly ? "disabled" : "")>
                                                        @if (!field.Required)
                                                        {
                                                            <option value="">Selecione...</option>
                                                        }
                                                        @if (field.Value != null && !string.IsNullOrEmpty(field.Value.ToString()))
                                                        {
                                                            <option value="@field.Value" selected>@field.DisplayText</option>
                                                        }
                                                    </select>
                                                    break;
                                                    
                                                default:
                                                    <input type="text" class="form-control @field.CssClass" 
                                                           name="@field.PropertyName" 
                                                           value="@field.Value" 
                                                           placeholder="@field.Placeholder"
                                                           @(field.Required ? "required" : "")
                                                           @(field.ReadOnly ? "readonly" : "") />
                                                    break;
                                            }
                                            
                                            <!-- Validation Messages -->
                                            @if (Model.ModelState.ContainsKey(field.PropertyName))
                                            {
                                                <div class="invalid-feedback d-block">
                                                    @Model.ModelState[field.PropertyName]
                                                </div>
                                            }
                                            
                                            @if (!string.IsNullOrEmpty(field.ValidationMessage))
                                            {
                                                <small class="form-text text-muted">@field.ValidationMessage</small>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Nenhum campo configurado para esta entidade.
                    </div>
                }

                <!-- Botões do Formulário -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action(Model.BackAction)" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i>@Model.BackText
                            </a>
                            
                            <div>
                                @if (Model.IsEditMode)
                                {
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save me-1"></i>Salvar Alterações
                                    </button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-plus me-1"></i>Criar @Model.EntityName
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // AJAX Form Submission
            @if (Model.EnableAjaxSubmit)
            {
                <text>
                $('#autoForm').on('submit', function(e) {
                    e.preventDefault();
                    
                    var formData = new FormData(this);
                    var submitBtn = $(this).find('button[type="submit"]');
                    
                    submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Salvando...');
                    
                    $.ajax({
                        url: $(this).attr('action') || window.location.pathname,
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function(response) {
                            if (response.success) {
                                if (response.redirectUrl) {
                                    window.location.href = response.redirectUrl;
                                } else {
                                    location.reload();
                                }
                            } else {
                                alert(response.message || 'Erro ao salvar');
                                submitBtn.prop('disabled', false).html('@(Model.IsEditMode ? "<i class=\"fas fa-save me-1\"></i>Salvar Alterações" : "<i class=\"fas fa-plus me-1\"></i>Criar " + Model.EntityName)');
                            }
                        },
                        error: function() {
                            alert('Erro ao processar solicitação');
                            submitBtn.prop('disabled', false).html('@(Model.IsEditMode ? "<i class=\"fas fa-save me-1\"></i>Salvar Alterações" : "<i class=\"fas fa-plus me-1\"></i>Criar " + Model.EntityName)');
                        }
                    });
                });
                </text>
            }

            // Reference Select Enhancement
            $('.reference-select').each(function() {
                var $select = $(this);
                var searchUrl = $select.data('search-url');
                
                if (searchUrl) {
                    // Implementar Select2 ou similar para busca dinâmica
                    $select.select2({
                        ajax: {
                            url: searchUrl,
                            dataType: 'json',
                            delay: 250,
                            data: function(params) {
                                return {
                                    term: params.term,
                                    page: params.page || 1
                                };
                            },
                            processResults: function(data) {
                                return {
                                    results: data.items || [],
                                    pagination: {
                                        more: data.hasMore || false
                                    }
                                };
                            }
                        },
                        minimumInputLength: 2,
                        placeholder: 'Digite para buscar...'
                    });
                }
            });
        });

        // Função para remover arquivo
        function removeFile(fieldName) {
            if (confirm('Tem certeza que deseja remover este arquivo?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: {
                        propertyName: fieldName,
                        filePath: $('input[name="' + fieldName + '_Current"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message || 'Erro ao remover arquivo');
                        }
                    }
                });
            }
        }
    </script>
}
