@model StandardGridViewModel<object>
@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header da Grid -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <h2 class="mb-1">
                        <i class="@Model.Icon me-2"></i>@Model.Title
                    </h2>
                    @if (!string.IsNullOrEmpty(Model.SubTitle))
                    {
                        <p class="text-muted mb-0">@Model.SubTitle</p>
                    }
                </div>
                
                @if (!string.IsNullOrEmpty(Model.CreateUrl))
                {
                    <a href="@Model.CreateUrl" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>Novo @Model.EntityName
                    </a>
                }
            </div>

            <!-- Filtros Automáticos -->
            @if (Model.Filters.Any())
            {
                <div class="card mb-3">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-filter me-2"></i>Filtros
                        </h5>
                    </div>
                    <div class="card-body">
                        <form id="filtrosForm" method="get">
                            <div class="row">
                                @foreach (var filter in Model.Filters)
                                {
                                    <div class="col-md-3 mb-2">
                                        <label class="form-label">@filter.DisplayName</label>
                                        @switch (filter.Type)
                                        {
                                            case EnumGridFilterType.Text:
                                                <input type="text" class="form-control" name="@filter.Name" 
                                                       value="@filter.Value" placeholder="@filter.Placeholder" />
                                                break;
                                            
                                            case EnumGridFilterType.Select:
                                                <select class="form-select" name="@filter.Name">
                                                    <option value="">Todos</option>
                                                    @foreach (var option in filter.Options)
                                                    {
                                                        <option value="@option.Value" selected="@(option.Value == filter.Value?.ToString())">
                                                            @option.Text
                                                        </option>
                                                    }
                                                </select>
                                                break;
                                                
                                            case EnumGridFilterType.Date:
                                                <input type="date" class="form-control" name="@filter.Name" 
                                                       value="@filter.Value" />
                                                break;
                                        }
                                    </div>
                                }
                            </div>
                            <div class="row mt-2">
                                <div class="col-12">
                                    <button type="submit" class="btn btn-outline-primary me-2">
                                        <i class="fas fa-search me-1"></i>Filtrar
                                    </button>
                                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                        <i class="fas fa-times me-1"></i>Limpar
                                    </a>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            }

            <!-- Tabela Automática -->
            <div class="card">
                <div class="card-body">
                    @if (Model.Items.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        @foreach (var column in Model.Columns.Where(c => c.ShowInGrid).OrderBy(c => c.Order))
                                        {
                                            <th style="@(!string.IsNullOrEmpty(column.Width) ? $"width: {column.Width}" : "")"
                                                class="@column.CssClass">
                                                @if (column.Sortable)
                                                {
                                                    <a href="@Url.Action("Index", new { 
                                                        orderBy = column.PropertyName, 
                                                        orderDirection = (Model.OrderBy == column.PropertyName && Model.OrderDirection == "asc") ? "desc" : "asc",
                                                        page = Model.CurrentPage 
                                                    })" class="text-white text-decoration-none">
                                                        @column.DisplayName
                                                        @if (Model.OrderBy == column.PropertyName)
                                                        {
                                                            <i class="fas fa-sort-@(Model.OrderDirection == "asc" ? "up" : "down") ms-1"></i>
                                                        }
                                                    </a>
                                                }
                                                else
                                                {
                                                    @column.DisplayName
                                                }
                                            </th>
                                        }
                                        
                                        @if (Model.RowActions.Any())
                                        {
                                            <th width="120" class="text-center">Ações</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            @foreach (var column in Model.Columns.Where(c => c.ShowInGrid).OrderBy(c => c.Order))
                                            {
                                                <td class="@column.CssClass">
                                                    @{
                                                        var property = item.GetType().GetProperty(column.PropertyName);
                                                        var value = property?.GetValue(item);
                                                        var displayValue = "";
                                                        
                                                        if (value != null)
                                                        {
                                                            if (!string.IsNullOrEmpty(column.Format))
                                                            {
                                                                displayValue = string.Format(column.Format, value);
                                                            }
                                                            else if (!string.IsNullOrEmpty(column.Template))
                                                            {
                                                                displayValue = column.Template.Replace("{value}", value.ToString());
                                                            }
                                                            else
                                                            {
                                                                displayValue = value.ToString();
                                                            }
                                                        }
                                                    }
                                                    @Html.Raw(displayValue)
                                                </td>
                                            }
                                            
                                            @if (Model.RowActions.Any())
                                            {
                                                <td class="text-center">
                                                    <div class="btn-group btn-group-sm" role="group">
                                                        @foreach (var action in Model.RowActions.OrderBy(a => a.Order))
                                                        {
                                                            var idProperty = item.GetType().GetProperty("Id");
                                                            var id = idProperty?.GetValue(item);
                                                            var actionUrl = action.Url.Replace("{id}", id?.ToString());
                                                            
                                                            <a href="@actionUrl" class="@action.CssClass" 
                                                               title="@action.DisplayName"
                                                               @(action.RequireConfirmation ? $"onclick=\"return confirm('{action.ConfirmationMessage}')\"" : "")>
                                                                <i class="@action.Icon"></i>
                                                            </a>
                                                        }
                                                    </div>
                                                </td>
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Paginação -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Paginação">
                                <ul class="pagination justify-content-center">
                                    @if (Model.HasPreviousPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = 1, orderBy = Model.OrderBy, orderDirection = Model.OrderDirection })">
                                                <i class="fas fa-angle-double-left"></i>
                                            </a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, orderBy = Model.OrderBy, orderDirection = Model.OrderDirection })">
                                                <i class="fas fa-angle-left"></i>
                                            </a>
                                        </li>
                                    }

                                    @for (var i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { page = i, orderBy = Model.OrderBy, orderDirection = Model.OrderDirection })">
                                                @i
                                            </a>
                                        </li>
                                    }

                                    @if (Model.HasNextPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, orderBy = Model.OrderBy, orderDirection = Model.OrderDirection })">
                                                <i class="fas fa-angle-right"></i>
                                            </a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, orderBy = Model.OrderBy, orderDirection = Model.OrderDirection })">
                                                <i class="fas fa-angle-double-right"></i>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }

                        <!-- Info da Grid -->
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <small class="text-muted">
                                Mostrando @((Model.CurrentPage - 1) * Model.PageSize + 1) até 
                                @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalRecords)) 
                                de @Model.TotalRecords registros
                            </small>
                            
                            <div class="btn-group btn-group-sm">
                                <a href="@Url.Action("ExportExcel")" class="btn btn-outline-success">
                                    <i class="fas fa-file-excel me-1"></i>Excel
                                </a>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Nenhum registro encontrado</h5>
                            <p class="text-muted">Não há dados para exibir com os filtros aplicados.</p>
                            
                            @if (!string.IsNullOrEmpty(Model.CreateUrl))
                            {
                                <a href="@Model.CreateUrl" class="btn btn-primary">
                                    <i class="fas fa-plus me-1"></i>Criar Primeiro @Model.EntityName
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-submit filtros quando mudarem
        $('#filtrosForm select').on('change', function() {
            $('#filtrosForm').submit();
        });
        
        // Enter key nos filtros de texto
        $('#filtrosForm input[type="text"]').on('keypress', function(e) {
            if (e.which === 13) {
                $('#filtrosForm').submit();
            }
        });
    </script>
}
