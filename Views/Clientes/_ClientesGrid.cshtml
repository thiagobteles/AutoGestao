@using AutoGestao.Enumerador
@using AutoGestao.Models
@model ClientesIndexViewModel

<div class="table-responsive">
    <table class="table table-hover mb-0" id="clientesTable">
        <thead class="table-dark sticky-top">
            <tr>
                <th style="cursor: pointer;" onclick="sortColumn('Nome')">
                    <div class="d-flex align-items-center">
                        Cliente
                        <i class="fas fa-sort ms-1 @(Model.OrderBy == "Nome" ? (Model.OrderDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "")"></i>
                    </div>
                </th>
                <th style="cursor: pointer;" onclick="sortColumn('Tipo')">
                    <div class="d-flex align-items-center">
                        Tipo
                        <i class="fas fa-sort ms-1 @(Model.OrderBy == "Tipo" ? (Model.OrderDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "")"></i>
                    </div>
                </th>
                <th style="cursor: pointer;" onclick="sortColumn('Documento')">
                    <div class="d-flex align-items-center">
                        Documento
                        <i class="fas fa-sort ms-1 @(Model.OrderBy == "Documento" ? (Model.OrderDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "")"></i>
                    </div>
                </th>
                <th>Contato</th>
                <th style="cursor: pointer;" onclick="sortColumn('Cidade')">
                    <div class="d-flex align-items-center">
                        Localiza√ß√£o
                        <i class="fas fa-sort ms-1 @(Model.OrderBy == "Cidade" ? (Model.OrderDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "")"></i>
                    </div>
                </th>
                <th>Status</th>
                <th style="cursor: pointer;" onclick="sortColumn('DataCadastro')">
                    <div class="d-flex align-items-center">
                        Cadastro
                        <i class="fas fa-sort ms-1 @(Model.OrderBy == "DataCadastro" ? (Model.OrderDirection == "asc" ? "fa-sort-up" : "fa-sort-down") : "")"></i>
                    </div>
                </th>
                <th>‚öôÔ∏è</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.ListaObjeto != null && Model.ListaObjeto.Any())
            {
                @foreach (var cliente in Model.ListaObjeto)
                {
                    <tr class="cliente-row">
                        <td>
                            <div class="d-flex align-items-center">
                                <div class="cliente-avatar me-2">
                                    @if (cliente.TipoCliente == EnumTipoPessoa.PessoaFisica)
                                    {
                                        <i class="fas fa-user text-primary"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-building text-warning"></i>
                                    }
                                </div>
                                <div>
                                    <div class="fw-semibold" style="font-size: 0.8rem;">@cliente.Nome</div>
                                    @if (!string.IsNullOrEmpty(cliente.Email))
                                    {
                                        <small class="text-muted" style="font-size: 0.7rem;">@cliente.Email</small>
                                    }
                                </div>
                            </div>
                        </td>
                        <td>
                            @if (cliente.TipoCliente == EnumTipoPessoa.PessoaFisica)
                            {
                                <span class="badge-modern badge-primary">üë§ PF</span>
                            }
                            else
                            {
                                <span class="badge-modern badge-warning">üè¢ PJ</span>
                            }
                        </td>
                        <td>
                            @if (cliente.TipoCliente == EnumTipoPessoa.PessoaFisica)
                            {
                                <span class="fw-bold" style="font-size: 0.75rem;">@cliente.CPF</span>
                                @if (!string.IsNullOrEmpty(cliente.RG))
                                {
                                    <br>
                                    <small class="text-muted" style="font-size: 0.65rem;">RG: @cliente.RG</small>
                                }
                            }
                            else
                            {
                                <span class="fw-bold" style="font-size: 0.75rem;">@cliente.CNPJ</span>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(cliente.Telefone))
                            {
                                <div style="font-size: 0.7rem;"><i class="fas fa-phone me-1"></i>@cliente.Telefone</div>
                            }
                            @if (!string.IsNullOrEmpty(cliente.Celular))
                            {
                                <div style="font-size: 0.7rem;"><i class="fas fa-mobile me-1"></i>@cliente.Celular</div>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(cliente.Cidade))
                            {
                                <div style="font-size: 0.75rem;">@cliente.Cidade/@cliente.Estado</div>
                            }
                            @if (!string.IsNullOrEmpty(cliente.CEP))
                            {
                                <small class="text-muted" style="font-size: 0.65rem;">@cliente.CEP</small>
                            }
                        </td>
                        <td>
                            @if (cliente.Ativo)
                            {
                                <span class="badge-modern badge-success">‚úÖ</span>
                            }
                            else
                            {
                                <span class="badge-modern badge-danger">‚ùå</span>
                            }
                        </td>
                        <td>
                            <div style="font-size: 0.7rem;">@cliente.DataCadastro.ToString("dd/MM/yy")</div>
                            <small class="text-muted" style="font-size: 0.65rem;">@cliente.DataCadastro.ToString("HH:mm")</small>
                        </td>
                        <td>
                            <!-- DROPDOWN CORRIGIDO - SEM BACKDROP -->
                            <div class="dropdown" data-cliente-id="@cliente.Id">
                                <button class="dropdown-toggle"
                                        type="button"
                                        onclick="toggleDropdown(this)"
                                        aria-expanded="false"
                                        data-bs-toggle="dropdown"
                                        data-bs-auto-close="outside">
                                    ‚öôÔ∏è
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Details", new { id = cliente.Id })">
                                            <i class="fas fa-eye me-2"></i>Detalhes
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Edit", new { id = cliente.Id })">
                                            <i class="fas fa-edit me-2"></i>Editar
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" href="javascript:void(0)" onclick="novaVenda(@cliente.Id); closeDropdown(this);">
                                            <i class="fas fa-handshake me-2"></i>Nova Venda
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="javascript:void(0)" onclick="novaAvaliacao(@cliente.Id); closeDropdown(this);">
                                            <i class="fas fa-clipboard-check me-2"></i>Avalia√ß√£o
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item text-danger" href="javascript:void(0)" onclick="inativarCliente(@cliente.Id); closeDropdown(this);">
                                            <i class="fas fa-ban me-2"></i>@(cliente.Ativo ? "Inativar" : "Ativar")
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="8" class="text-center py-4">
                        <div class="text-muted">
                            <i class="fas fa-users fa-2x mb-2"></i>
                            <p class="mb-2">Nenhum cliente encontrado com os filtros aplicados.</p>
                            <button class="btn-modern btn-outline-modern btn-sm" onclick="limparFiltros()">
                                <i class="fas fa-times"></i>
                                Limpar Filtros
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        initializeDropdowns();
    });

    // Sistema de dropdown MANUAL (sem backdrop)
    function toggleDropdown(button) {
        event.preventDefault();
        event.stopPropagation();

        const dropdown = button.closest('.dropdown');
        const menu = dropdown.querySelector('.dropdown-menu');

        // Fechar todos os outros dropdowns
        document.querySelectorAll('.dropdown-menu.show').forEach(m => {
            if (m !== menu) {
                m.classList.remove('show');
            }
        });

        // Toggle do dropdown atual
        menu.classList.toggle('show');
        button.setAttribute('aria-expanded', menu.classList.contains('show'));
    }

    // Fechar dropdown espec√≠fico
    function closeDropdown(item) {
        const menu = item.closest('.dropdown-menu');
        if (menu) {
            menu.classList.remove('show');
            const button = menu.previousElementSibling;
            if (button) {
                button.setAttribute('aria-expanded', 'false');
            }
        }
    }

    // Fechar dropdowns ao clicar fora
    document.addEventListener('click', function(event) {
        if (!event.target.closest('.dropdown')) {
            document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                menu.classList.remove('show');
                const button = menu.previousElementSibling;
                if (button) {
                    button.setAttribute('aria-expanded', 'false');
                }
            });
        }
    });

    // Inicializar dropdowns
    function initializeDropdowns() {
        console.log('Inicializando dropdowns...');

        // Garantir que todos os dropdowns tenham event listeners
        document.querySelectorAll('.dropdown-toggle:not(.initialized)').forEach(button => {
            button.classList.add('initialized');
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                toggleDropdown(this);
            });
        });
    }

    // Fazer fun√ß√£o global para uso em outras partes
    window.initializeDropdowns = initializeDropdowns;
    window.toggleDropdown = toggleDropdown;
    window.closeDropdown = closeDropdown;

    // Fun√ß√µes para as a√ß√µes do dropdown
    function novaVenda(clienteId) {
        if (clienteId) {
            window.location.href = `/Vendas/Create?clienteId=${clienteId}`;
        } else {
            showToast('ID do cliente n√£o encontrado', 'error');
        }
    }

    function novaAvaliacao(clienteId) {
        if (clienteId) {
            window.location.href = `/Avaliacoes/Create?clienteId=${clienteId}`;
        } else {
            showToast('ID do cliente n√£o encontrado', 'error');
        }
    }

    function inativarCliente(clienteId) {
        if (!clienteId) {
            showToast('ID do cliente n√£o encontrado', 'error');
            return;
        }

        if (confirm('Tem certeza que deseja alterar o status deste cliente?')) {
            if (typeof showLoading === 'function') {
                showLoading(true);
            }

            fetch(`/Clientes/AlterarStatus/${clienteId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (typeof showToast === 'function') {
                        showToast('Status alterado com sucesso!', 'success');
                    }
                    // Recarregar grid
                    if (typeof aplicarFiltros === 'function') {
                        aplicarFiltros();
                    } else {
                        location.reload();
                    }
                } else {
                    if (typeof showToast === 'function') {
                        showToast('Erro ao alterar status!', 'error');
                    }
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                if (typeof showToast === 'function') {
                    showToast('Erro ao alterar status!', 'error');
                }
            })
            .finally(() => {
                if (typeof showLoading === 'function') {
                    showLoading(false);
                }
            });
        }
    }

    // Fazer as fun√ß√µes globais
    window.novaVenda = novaVenda;
    window.novaAvaliacao = novaAvaliacao;
    window.inativarCliente = inativarCliente;

    // Fun√ß√£o para ordena√ß√£o
    function sortColumn(column) {
        console.log('Ordenar por:', column);
        // Implementar ordena√ß√£o se necess√°rio
    }

    window.sortColumn = sortColumn;
</script>

<style>
    /* Estilos espec√≠ficos para esta grid */
    .cliente-avatar {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: rgba(55, 65, 81, 0.05);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
    }

        .cliente-avatar i {
            font-size: 0.7rem;
        }

    .cliente-row:hover {
        background-color: rgba(55, 65, 81, 0.02) !important;
    }

    .badge-modern {
        font-size: 0.6rem !important;
        padding: 0.125rem 0.25rem !important;
    }

    /* Estilos do dropdown espec√≠ficos para esta tabela */
    .table .dropdown {
        position: static !important;
    }

    .table .dropdown-menu {
        position: absolute !important;
        z-index: 1051 !important;
        min-width: 140px !important;
    }

    /* Garantir que √∫ltima linha tenha dropdown para cima */
    .table tbody tr:nth-last-child(-n+3) .dropdown-menu {
        top: auto !important;
        bottom: 100% !important;
        margin-bottom: 0.125rem !important;
        margin-top: 0 !important;
    }
</style>